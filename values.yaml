# Default values for diode-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # Likely true if bind and false if publish
  enabled:
  type: ClusterIP
  clusterIP:
  port: ""
  targetPort: ""
  protocol: 

diodeConfiguration:
  localServer:
    diodeHex: ""
    diodePinata: ""
    diodeKeyName: ""
    # Protocol used for the diode connection. Default: tls.
    # Options are tcp, udp, tls
    protocol: ""
    # Options are "public" and "private"
    publishType: ""
    # Diode mode. Options are "publish", "bind", and "both"
    mode: ""
  remoteServer:
    # Remote diode configuration
    remoteDiodeHex: ""
    port: ""
    # Protocol used for the diode connection. Default: tls.
    # Options are tcp, udp, tls
    protocol: ""
    # Type of connection. Default: public. 
    # Options are "public" and "private"
    publishType: ""
    # Only publish for now
    mode: publish
  config: 
    allowlists: 
    
    # bool type
    api: false

     # string type
    apiaddr: localhost

     # string type
    bind: ""

     # map type (key: Address, value: bool)
    blocklists:
      # 0.0.0.0: true

     # bool type
    blockprofile:

     # int type
    blockprofilerate:

     # string type
    cpuprofile:

     # string type
    dbpath:

     # bool type
    debug: false

     # []Address type
    diodeaddrs:

     # int type
    e2etimeout: 15s

     # bool type
    fleet:

     # bool type
    logdatetime: false

     # string type
    logfilepath:

     # string type
    memprofile:

     # bool type
    metrics: false

     # bool type
    mutexprofile:

     # int type
    mutexprofilerate: 1

     # int type
    pprofport: 0

     # int type
    retrytimes: 3

     # int type
    retrywait: 1s

     # int type
    rlimit_nofile: 0

     # int type
    timeout: 5s

     # bool type
    update: true
  command:
    bns:
      account:
      # Type string
      # Display the account information of a given BNS name
      force:
      # Type
      # Force re-registration in case of registration, even if the name is already registered.
      lookup:
      # Type string
      # Lookup a given BNS name.
      register:
      # Type string
      # Register a new BNS name with <name>=<address>.
      transfer:
      # Type string
      # Transfer an existing BNS name with <name>=<new_owner>.
      unregister:
      # Type string
      # Free a new BNS name with <name>.
    config:
      delete:
        # deletes the given variable from the config
      list:
        # list all stored config keys
      set:
        # sets the given variable in the config
      unsafe:
        # display private keys (disabled by default)

    fetch:
      data:
        # string
        # The http body that will be transfered.
        header:
          # The http header that will be transfered.
        method: 
          # string
          # The http method (GET/POST/DELETE/PUT/OPTION). (default "GET")
        output:
          # string
          # The output file that keep response body.
        url:
        #  string
          # The http request URL.
        verbose:
          # Print more information about the connection.
    gateway:
      additional_ports:
        # string
        # httpsd secure server ports
      allow_redirect:
        # allow redirect all http transmission to httpsd
      certpath:
        # string
        # Pem format of certificate file path of httpsd secure server (default "./priv/cert.pem")
      edge_acme:
        # allow to use ACME generate certificates automatically
      edge_acme_email:
        # string
        # ACME email configuration
      fallback:
        # string
        # how to resolve web2 addresses (default "localhost")
      httpd_host:
        # string
        # host of httpd server listening to (default "127.0.0.1")
      httpd_port:
        # int
        # port of httpd server listening to (default 80)
      httpsd_host:
        # string
        # host of httpsd server listening to (default "127.0.0.1")
      httpsd_port:
        # int
        # port of httpsd server listening to (default 443)
      privpath:
        # string
        # Pem format of private key file path of httpsd secure server (default "./priv/priv.pem")
      proxy_host:
        # string
        # host of socksd proxy server (default "127.0.0.1")
      proxy_port:
        # int
        # port of socksd proxy server (default 1080)
      secure:
        # 
        # enable httpsd server
      socksd:
        # 
        # enable socksd proxy server

    publish:
      http:
        # 
        # enable http static file server
      http_dir:
        # string
        # the root directory of http static file server
      http_host:
        # string
        # the host of http static file server (default "127.0.0.1")
      http_port:
        # int
        # the port of http static file server (default 8080)
      indexed:
        # 
        # enable directory indexing in http static file server
      private:
        # value
        # expose ports to private users, so that user could connect to
      protected:
        # value
        # expose ports to protected users (in fleet contract), so that user could connect to
      proxy_host:
        # string
        # host of socksd proxy server (default "127.0.0.1")
      proxy_port:
        # int
        # port of socksd proxy server (default 1080)
      public:
        # value
        # expose ports to public users, so that user could connect to
      socksd:
        # 
        # enable socksd proxy server

    reset:
      experimental:
        # send transactions of fleet deployment and device allowlist at seme time
    socksd:
      fallback:
        # string
        # how to resolve web2 addresses (default "localhost")
      socksd_host:
        # string
        # host of socks server listening to (default "127.0.0.1")
      socksd_port:
        # int
        # port of socks server listening to (default 1080)

    time: 
      # bool

    token:
      balance:
        # 
        # Just check the balance and quit.
      data:
        # string
        # Data that will be submitted with the transaction.
      gas:
        # string
        # Transfer gas paid to diode miner. (default "21000")
      gasprice:
        # string
        # Transfer gas price paid to diode miner.
      to:
        # string
        # The address or BNS name that DIODEs will be transfered to.
      value:
        # string
        # Amount of DIODEs to be transfered.

    update: 
      # bool

    version:
      # bool


ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

storage:
  keepPvc: true
  # Size of storage. Default: 20Mi
  size: "20Mi"